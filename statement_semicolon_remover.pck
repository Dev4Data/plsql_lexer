create or replace package statement_semicolon_remover is
--Copyright (C) 2015 Jon Heller.  This program is licensed under the LGPLv3.

function remove(
	p_abstract_tokens in token_table,
	p_command_name    in varchar2
) return nclob;


/*

** PURPOSE **

Statement Semicolon Remover removes the terminating semicolon from the end of a
statement.  This is helpful when the statement will be executed as dynamic SQL.

Dynamic SQL requires some commands must include a terminating semicolon and
other commands must not include a semicolon.  For example, "create table ..."
must not have a semicolon, but "create procedure ..." must end with a semicolon.

Only the LAST semicolon is removed.  Just like with SQL*Plus, if the statement
ends with two semicolons it will not work correctly.

** EXAMPLE **

TODO

** PARAMETES **

- p_abstract_tokens (IN):  The tokens for a statement, probably generated by tokenizer.
- p_command_name (IN)   :  The command name for the statement, as defined by V$SQLCOMMAND.
                           This value will probably come from STATEMENT_CLASSIFIER.

*/

end;
/
create or replace package body statement_semicolon_remover is

--------------------------------------------------------------------------------
--Build the statement excluding the last semicolon, if any.
function build_statement_wo_semicolon(p_abstract_tokens token_table)
return nclob is
	v_statement nclob;
begin
	--Start from end, exclude all semicolon tokens from the end.
	--

	null;
end build_statement_wo_semicolon;


--------------------------------------------------------------------------------
--Return the statement without any modification.
function build_statement_as_is(p_abstract_tokens token_table)
return nclob is
	v_statement nclob;
begin
	for i in 1 .. p_abstract_tokens.count loop
		v_statement := v_statement || p_abstract_tokens(i).value;
	end loop;

	return v_statement;
end build_statement_as_is;


--------------------------------------------------------------------------------
--Remove extra semicolons, if any, to prepare for dynamic execution.
function remove(
	p_abstract_tokens in token_table,
	p_command_name    in varchar2
) return nclob is
begin
	--Determine if statement must have a semicolon or not.
	if p_command_name in ('TODO') then
		return build_statement_wo_semicolon(p_abstract_tokens);
	elsif p_command_name in ('TODO') then
		return build_statement_as_is(p_abstract_tokens);
	else
		raise_application_error(-20000, 'Cannot determine if statement needs a semicolon.'||
			'  The command name "'||p_command_name||'" is not recognized.');
	end if;
end remove;

end;
/
